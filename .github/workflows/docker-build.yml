name: Docker Build and Push

on:
  push:
    branches:
      - development
    tags:
      - '[0-9]*.[0-9]*.[0-9]*'
  pull_request:
    branches: 
      - development
  workflow_dispatch:

permissions:
  contents: read
  id-token: write # Required for OIDC

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: Development
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GithubActionsOIDC
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Build and push base image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
      run: |
        # Build and push base image
        docker build --target base -t $ECR_REGISTRY/$ECR_REPOSITORY-base:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY-base:latest

    - name: Build and push development image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
        VERSION: ${{ steps.get_version.outputs.version }}
      run: |
        # Build the development image using base
        docker build --cache-from $ECR_REGISTRY/$ECR_REPOSITORY-base:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
        # Tag development image according to branch/tag
        if [ "${{ github.ref }}" = "refs/heads/development" ]; then
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:development
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:development
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        fi
        
        # Always push the SHA tagged development image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Clean up
      if: always()
      run: |
        docker system prune -f
