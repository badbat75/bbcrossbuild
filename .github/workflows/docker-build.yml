name: Docker Build and Push

on:
  push:
    branches: 
      - master
      - development
    paths:
      - 'Dockerfile'
      - '.github/workflows/**'
      - 'src/**'
  pull_request:
    branches: 
      - master
      - development
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-env.outputs.env_name }}
    steps:
      - name: Set environment name
        id: set-env
        run: |
          if [[ $GITHUB_REF == "refs/heads/development" ]]; then
            echo "env_name=Development" >> $GITHUB_OUTPUT
          else
            echo "env_name=Production" >> $GITHUB_OUTPUT
          fi
          echo "Branch: $GITHUB_REF"
          echo "Environment: ${{ steps.set-env.outputs.env_name }}"

  build:
    needs: determine-environment
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.env_name }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build the Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        
        # Tag based on branch
        if [ "${{ github.ref }}" = "refs/heads/master" ]; then
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        else
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:development
        fi
        
        # Push the Docker image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        if [ "${{ github.ref }}" = "refs/heads/master" ]; then
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        else
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:development
        fi

    - name: Clean up
      if: always()
      run: |
        docker system prune -f
