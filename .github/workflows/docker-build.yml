name: Docker Build and Push

on:
  push:
    branches: [ "development" ]
    paths:
      - 'Dockerfile'
      - '.github/workflows/**'
      - 'src/**'
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# Environment variables can be set in:
# 1. GitHub repository variables (Settings > Secrets and variables > Actions > Variables)
#    - Set non-sensitive variables like AWS_REGION, ECR_REPOSITORY
# 2. GitHub repository secrets (Settings > Secrets and variables > Actions > Secrets)
#    - Set sensitive data like AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY
env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY || 'bbcrossbuild' }}

permissions:
  contents: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build the Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Push the Docker image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Clean up
      if: always()
      run: |
        docker system prune -f
