#!/bin/bash
trap 'STATUS=${?}; \
	echo >&2; \
	echo "[${FUNCNAME[*]} - ERR: ${STATUS}]" >&2; \
	echo >&2; \
	set +E +o pipefail; \
	trap - ERR SIGINT; \
	exit ${STATUS}' ERR

set -E -o pipefail

BB_HOME=$(realpath "$(dirname "${BASH_SOURCE[0]}")")
#PROGRAM_NAME="$(basename "${BASH_SOURCE[0]}")"

# shellcheck source=seterr
source "${BB_HOME}/seterr"
# shellcheck source=core.functions
source "${BB_HOME}/core.functions"
check_core_functions

OPTS="" OPTS_WITH_VALUE="" param2value "${@}"

# shellcheck disable=SC2154
PROJECT_NAME="${_param_1}"
# shellcheck disable=SC2154
PLATFORM_NAME="${_param_2}"

if [ -z "${PROJECT_NAME}" ]
then
	trow_error "${ERROR_NOT_VALID_OPTION}" "No project name specified."
fi

if [ -z "${PLATFORM_NAME}" ]
then
	trow_error "${ERROR_NOT_VALID_OPTION}" "No platform name specified."
fi

ulimit -n 2048
umask 0022

if [ -f "${BB_HOME}/bbxb.conf" ]
then
	# shellcheck source=./bbxb.conf
	source "${BB_HOME}/bbxb.conf"
fi

PROJECT=${BB_HOME}/${PRJ_PATH:-projects}/${PROJECT_NAME}.prj
PLATFORM=${BB_HOME}/${PLATFORM_DIR:-platforms}/${PLATFORM_NAME}.conf

if [ ! -f "${PLATFORM}" ]
then
	trow_error "${ERROR_FILE_NOT_FOUND}" "Platform ${PLATFORM} does not exist."
fi

# shellcheck source=platforms/generic-x64.conf
source "${PLATFORM}"
# shellcheck source=setenv
source "${BB_HOME}/setenv"
# shellcheck source=build.functions
source "${BB_HOME}/build.functions"
# shellcheck source=project.functions
source "${BB_HOME}/project.functions"
# shellcheck source=toolchain.functions
source "${BB_HOME}/toolchain.functions"
# shellcheck source=images.functions
source "${BB_HOME}/images.functions"
# shellcheck source=data.functions
source "${BB_HOME}/data.functions"

trap 'STATUS=${?}; \
	echo >&2; \
	echo "[${FUNCNAME[*]} - ERR: ${STATUS}]" >&2; \
	echo >&2; \
	pause; \
	set +E +o pipefail; \
	trap - SIGINT; \
	unmount_tag --all || true; \
	trap - ERR; \
	exit ${STATUS}' ERR
trap 'echo >&2; \
	echo "[${FUNCNAME[*]}] SIGINT received." >&2; \
	echo >&2; \
	set +E +o pipefail; \
	trap - SIGINT; \
	unmount_tag --all || true; \
	trap - ERR; \
	exit 0' SIGINT

if [ ! -f "${PROJECT}" ]
then
	trow_error "${ERROR_FILE_NOT_FOUND}" "Project ${PROJECT} does not exist."
fi

echo "Project path: ${DATA_PATH}/${PROJECT_NAME}"
echo

if [ ! -d "${GLOBAL_LOG_PATH}" ]
then
	mkdir -p "${GLOBAL_LOG_PATH}"
fi

if [ ! -d "${USERDATA_PATH}" ]
then
	mkdir -p "${USERDATA_PATH}"
fi

# shellcheck source=projects/lfs.prj
source "${PROJECT}"

unmount_tag --all

echo -e "Build completed!\n"

set +E +o pipefail
trap - ERR SIGINT