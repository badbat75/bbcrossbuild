# Build recipe for moode mediacenter

MOODEREL=r800
MOODEDEVCOMMIT=fda7b75ecc4d071e6af22198dd6cce4ae3f656dc

case ${PLATFORM_NAME} in
	rpi|rpi2|rpi3)
		RASPBIAN_IMAGE=2022-01-28-raspios-bullseye-armhf-lite
		RASPBIAN_URL=https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2022-01-28/
	;;
	rpi3-aarch64)
		RASPBIAN_IMAGE=2022-01-28-raspios-bullseye-arm64-lite
		RASPBIAN_URL=https://downloads.raspberrypi.org/raspios_lite_arm64/images/raspios_lite_arm64-2022-01-28/
	;;
esac

## Set Clang as default compiler set
TOOLCHAIN=llvm

## Enable LTO both for kernel and applications
LTOENABLE=thin
KERNEL_LTOENABLE=thin

## Enable shared libraries (default) but disable static ones
BUILD_LIBSHARED=1
BUILD_LIBSTATIC=0

LLVM_POLLY_FEATURES=all

## Set default sysroot pkg-config library path
PKG_CONFIG_SYSROOT_DIR=${BIN_PATH}

mount_tag distos --url "${RASPBIAN_URL}${RASPBIAN_IMAGE}.zip" --imgfile "${RASPBIAN_IMAGE}.img" --mountlist "2:/ 1:/boot" --resize 2:3G
if [ -z ${SKIP_DISTOS_APTS} ]
then
	run_on_root_dir distos root "apt-get -y purge --autoremove raspberrypi-kernel rpi-eeprom firmware-* \
		libasound2 bluez wpasupplicant iw htop libnl-3-200 RPi.GPIO libcamera-apps-lite libsource-highlight4v5 \
		raspberrypi-sys-mods raspberrypi-net-mods"
	run_on_root_dir distos root "apt-get update --allow-releaseinfo-change"
	run_on_root_dir distos root "DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade"
	run_on_root_dir distos root "DEBIAN_FRONTEND=noninteractive apt-get -y install \
		libc6-dev libpython3-dev libsqlite3-dev \
		libusb-dev libglib2.0-dev libudev-dev libical-dev libreadline-dev libdbus-1-dev \
		libbsd-dev libncurses5-dev \
		\
		libcurl4-gnutls-dev libyajl-dev \
		libavahi-client-dev libsystemd-dev libwrap0-dev libicu-dev libglib2.0-dev \
		\
		libltdl3-dev libmagic-dev libopencore-amrnb-dev libopencore-amrwb-dev libpng-dev \
		\
		libpopt-dev libavahi-client-dev libssl-dev \
		libexpat1-dev libxml2-dev libxslt1-dev \
		libjpeg62-turbo-dev \
		\
		libpython3-dev swig \
		\
		zlib1g-dev libbz2-dev liblzma-dev \
		\
		libdbus-glib-1-dev \
		\
		python3-dbus python3-matplotlib python3-aiohttp python3-yaml"
	run_on_root_dir distos root "apt-get clean"
fi
prepare_sysroot

#create_sysroot http://<url>/<rootfs.tar.gz>
setup_gcc
setup_llvm
setup_rust
setup_python 3.9.8

#create_key_sscertificate
generate_ssh_keys --install binaries

#clean_project
#pause
##### RaspberryPi Packages
WITH_EXTOPTS=1 build --keep_builddir raspberrypi/rpi-kernel_5.16
#####
build raspberrypi/raspi-config
build raspberrypi/raspberrypi-sys-mods
build raspberrypi/raspberrypi-net-mods
build moode/alsa-utils_1.2.6

# Download and install moode-sources and pre-build environment
build moode/moode-dynamic-ver_2.0

build raspbian/iw_5.9-3
build firmwares/wireless-regdb_2021.08.28
build raspbian/hostapd_2.9.0
build raspbian/wpa_supplicant_2.9.0
build moode/mediainfo_21.09
build moode/alsacap

# USB mounter
#build raspbian/udisks-glue_1.3.5-1
build raspbian/udevil_0.4.4-2

# STEP 4 - Install enhanced networking and bluetooth stack
build moode/bluez_5
build raspberrypi/pi-bluetooth
WITH_APTX=libopenaptx build moode/bluez-alsa_3

# STEP 6 - Compile and install MPD
build moode/mpd_0.23
build moode/mpc_0.34

# STEP 9a - Eq2Fa12p
build raspbian/alsaequal_0.6-8
build moode/caps_0.9.26-eqfa12p+22ef349

# STEP 9b - CamillaDSP and alsa_cdsp
build moode/camilladsp_0.6.3
build moode/alsa-cdsp+bbf06dd
build moode/camillagui-backend_0.8.0

# COMPONENT 1 - MiniDLNA
build moode/minidlna_1.3.0

# COMPONENT 2 - Auto-shuffle
build moode/ashuffle_3

# COMPONENT 4A - Shairport-sync
#WITH_ALAC=1 build moode/shairport-sync_4.1
WITH_ALAC=1 build moode/shairport-sync_3.3.9

# COMPONENT 4B - Librespot
build moode/librespot_0.3.1

# COMPONENT 5 - Squeezelite
build moode/squeezelite_master

# COMPONENT 6 - Upmpdcli
build moode/upmpdcli_1.5
build moode/libupnpp-bindings_0.21
#build moode/libupnppsamples_moode

# COMPONENT 9 - Allo Piano 2.1 Firmware
build firmwares/allo-piano-firmware-master

# COMPONENT 10 - Broadcom Bluetooth devices firmwares
build firmwares/broadcom-bt-firmware-master

#
# FINAL - Clean up

build raspbian/bs2b-ladspa_0.9.1-3
build raspbian/sox_14.4.2+git20190427-2
build raspbian/flac_1.3.3-2
build moode/trx_0.6
build raspbian/haveged_1.9.14-1
build moode/udisks-glue_1.3.5

unmount_tag distos

# Create firstboot script
mkdir -p ${BIN_PATH}/root
cat > ${BIN_PATH}/root/firstboot <<-EOF
	#!/bin/sh
	export PATH=/usr/sbin:/usr/bin:/sbin:/bin
	date -s "@$(date +%s)"
	mkdir /dev/pts
	mount -t devpts devpts /dev/pts
	mount -t proc proc /proc
	mount -t sysfs sys /sys
	mount -t tmpfs tmp /run
	mkdir -p /run/systemd
	mount -oremount,rw /dev/mmcblk0p2 /
	mount /dev/mmcblk0p1 /boot
	mount > /root/mount.firstboot

	echo "** Generate alsaequal binary"
	amixer -D alsaequal
	mkdir /opt/alsaequal/
	mv /usr/local/bin/alsaequal.bin /opt/alsaequal/
	chmod 0755 /opt/alsaequal/alsaequal.bin
	chown mpd:audio /opt/alsaequal/alsaequal.bin

	echo "wait until mpd is started ..."
	#/usr/local/bin/moodeutl -r
	mpd /etc/mpd.conf
	timeout 10s bash -c "until mpc status; do sleep 1; done";
	mpc status
	if [ \$? -eq 0 ]
	then
		mpc load "Default Playlist"
		echo "** List MPD outputs"
		mpc outputs
		echo "** Enable only output 1"
		mpc enable only 1
		mpd --kill
	else
		echo "hmmm problem mpd isn't started!"
		echo "(check if after reboot the problem is fixed.)"
	fi

	echo "** revert to normal boot..."

	sed -i 's#init=/root/firstboot##' /boot/cmdline.txt

	umount /boot
	rm -f /root/firstboot
	mount -oremount,ro /dev/mmcblk0p2 /

	sleep 10
	echo b > /proc/sysrq-trigger
	exit 0
EOF
chmod +x ${BIN_PATH}/root/firstboot

# Build common final Image to be used to deploy moode

if [ -z ${DISABLE_FINAL_IMG} ]
then
	mount_tag final --url ${RASPBIAN_URL}${RASPBIAN_IMAGE}.zip --imgfile ${RASPBIAN_IMAGE}.img --mountlist "2:/ 1:/boot" --resize 2:3G

	run_on_root_dir final root "apt-get -y purge --autoremove raspberrypi-kernel libraspberrypi-dev \
		gcc-10 build-essential libc6-dev dpkg-dev manpages-dev initramfs-tools-core RPi.GPIO bluez \
		wpasupplicant iw htop libnl-3-200 libcamera-apps-lite libsource-highlight4v5 \
		libasound2 raspberrypi-sys-mods raspberrypi-net-mods"
	run_on_root_dir final root "apt-get update --allow-releaseinfo-change"
	run_on_root_dir final root "DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade"
	run_on_root_dir final root "DEBIAN_FRONTEND=noninteractive apt-get -y install \
		libgomp1 triggerhappy \
		php-fpm nginx sqlite3 php-sqlite3 php7.4-gd php-yaml \
		\
		telnet sysstat squashfs-tools shellinabox \
		samba smbclient exfat-fuse inotify-tools \
		avahi-utils winbind libnss-winbind djmount xfsprogs id3v2 \
		udisks2 libatasmart4 libdbus-glib-1-2 libgudev-1.0-0 libsgutils2-2 libdevmapper-event1.02.1 \
		\
		libyajl2 libavahi-client3 libcurl3-gnutls \
		\
		dnsmasq \
		\
		expect \
		\
		python3-dbus python3-matplotlib python3-aiohttp python3-yaml"

	if [ ${ENABLE_DISPLAY:-0} -eq 1 ]
	then
		run_on_root_dir final root "DEBIAN_FRONTEND=noninteractive apt-get -y install \
			xinit xorg xserver-xorg-legacy chromium-browser libgtk-3-0 libgles2"
	fi

	run_on_root_dir final root "apt-get -y purge --autoremove libcephfs2"
	run_on_root_dir final root "apt-get clean"
	unmount_tag final

	cp -v ${DISKIMAGES_PATH}/final.img ${DISKIMAGES_PATH}/temp.img
	
	mount_tag temp --mountlist "2:/ 1:/boot"

	inject_into_mount_tag temp binaries --remove_devfiles

	# Run /root/firstboot at first boot, enable verbose boot and set physical boot device
	run_on_root_dir temp root "sed -i \"s|elevator=[^ ]*||;s|root=[^ ]*|root=/dev/mmcblk0p2|;s|init=/usr/lib/raspi-config/init_resize.sh|init=/root/firstboot|;s| quiet||\" /boot/cmdline.txt"
	# Users and groups
	run_on_root_dir temp root "useradd -r -M -s /usr/sbin/nologin -G audio -c \"MediaPlayer Daemon\" -d /var/lib/mpd mpd || true"
	run_on_root_dir temp root "useradd -r -M -s /usr/sbin/nologin -G audio -c \"AirPlay Daemon\" -d /var/lib/shairport-sync shairport-sync || true"
	run_on_root_dir temp root "useradd -r -M -s /usr/sbin/nologin -c \"UPnP Media Renderer Client\" -d /var/lib/upmpdcli upmpdcli || true"
	run_on_root_dir temp root "useradd -r -M -s /usr/sbin/nologin -c \"MiniDLNA server\" -d /var/lib/minidlna minidlna || true"
	# File permissions
	run_on_root_dir temp root "chown root:plugdev /usr/bin/udevil"
	run_on_root_dir temp root "chown -R pi:pi /home/pi"
	#run_on_root_dir temp root "chown www-data:www-data /var/local/php"
	run_on_root_dir temp root "chown -R mpd:audio /var/lib/mpd"
	run_on_root_dir temp root "chown -R mpd:audio /var/log/mpd"
	run_on_root_dir temp root "chown mpd:audio /etc/mpd.conf"
	run_on_root_dir temp root "chown mpd:audio /run/mpd"
	run_on_root_dir temp root "chown minidlna:minidlna /var/cache/minidlna"
	run_on_root_dir temp root "chown minidlna:minidlna /var/lib/minidlna"
	# Moode pre-boot configuration
	run_on_root_dir temp root "bash -x /home/pi/preboot.sh configure"
	run_on_root_dir temp root "rm /home/pi/preboot.sh"

	case x${PLATFORM_NAME} in
		xrpi)
			run_on_root_dir temp root "cat >>/boot/config.txt <<-EOF
				arm_freq=800
				cpu_freq=275
			EOF"
		;;
	esac
	run_on_root_dir temp root "systemctl disable regenerate_ssh_host_keys"
	run_on_root_dir temp root "systemctl enable ssh"
	run_on_root_dir temp root "chown upmpdcli /var/cache/upmpdcli/ohcreds/credkey.pem"

	if [ -f ~/moodecfg.ini ]
	then
		echo "Uploading custom moodecfg.ini configuration..."
		inject_into_mount_tag temp ~/moodecfg.ini /boot
		echo "Done."
	fi

	# Uncomment it to navigate in the temp filesystem
	pause

	unmount_tag --finalize temp
fi