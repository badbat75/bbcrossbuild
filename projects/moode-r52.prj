# Build recipe for moode mediacenter

MOODEREL=r52

## Enable shared libraries (default) but disable static ones
BUILD_LIBSHARED=1
BUILD_LIBSTATIC=0

## Enable LTO both for kernel and applications
LTOENABLE=1
KERN_LTOENABLE=0

create_sysroot http://bbb-build-artifacts.s3-eu-west-1.amazonaws.com/moode/20190513-142911-moode-empty-dev.tar.xz
setup_gcc
setup_rust
setup_python

create_key_sscertificate

#clean_project

# Download moode-sources
build moode/moode-${MOODEREL}

# STEP 1 - Modify Raspbian Lite and create a new, base image
build moode/rpi-kernel-4.19-master
#build raspbian/rpi-kernel-4.14-1.20190401-1
build raspbian/wpa_supplicant_2.7+git20190128+0c1e29f-5
build raspbian/hostapd_2.7+git20190128+0c1e29f-5
build raspbian/iw_5.0.1-1
build moode/crda_3.18-1
# Disabled due to python3 incompatibility
#build moode/crda_4.14

# STEP 2 - Expand the root partition to 3GB
# STEP 3 - Install core packages
build raspbian/mediainfo-18.12-2

# STEP 4 - Install enhanced networking and bluetooth stack
build moode/bluez-5.50
build moode/pi-bluetooth-master
build moode/bluez-alsa-1.4.0

# STEP 5 - Install Rotary encoder driver
build moode/rotenc-moode-${MOODEREL}

# STEP 6 - Compile and install MPD
build moode/mpd-0.21.8
build moode/mpc-0.31

# STEP 7 - Create moOde runtime environment
# STEP 8 - Install moOde sources and configs
# STEP 9 - Alsaequal
# STEP 10 - Optionally squash /var/www
# STEP 12 - Launch and configure moOde!
# STEP 13 - Final prep for image

# COMPONENT 1 - MiniDLNA
build raspbian/minidlna-1.2.1

# COMPONENT 2 - Auto-shuffle
build moode/ashuffle-1.1.2

# COMPONENT 3 - MPD Audio Scrobblea
build moode/mpdas-master

# COMPONENT 4A - Shairport-sync
build moode/shairport-sync-3.3.0

# COMPONENT 4B - Librespot
build moode/librespot-master

# COMPONENT 5 - Squeezelite
build moode/squeezelite-master

# COMPONENT 6 - Upmpdcli
build moode/upmpdcli-1.4.1
build moode/libupnppsamples-master  

# COMPONENT 7 - Optionally install gmusicapi
build python/gmusicapi-12.0.0

# COMPONENT 8 - Local UI display

# COMPONENT 9 - Allo Piano 2.1 Firmware
build firmwares/allo-piano-firmware-master

# COMPONENT 10 - Broadcom Bluetooth devices firmwares
build firmwares/broadcom-bt-firmware-master

#
# FINAL - Clean up

cat <<-EOF > ${USERDATA_PATH}/pre.sfx
	export PATH=/usr/sbin:/usr/bin:/sbin:/bin
	date -s "@$(date +%s)"
	mkdir /dev/pts
	mount -t devpts devpts /dev/pts
	mount -t proc proc /proc
	mount -t sysfs sys /sys
	mount -t tmpfs tmp /run
	mkdir -p /run/systemd
	mount -oremount,rw /dev/mmcblk0p2 /
	mount /dev/mmcblk0p1 /boot
	apt-get -y purge raspberrypi-kernel
EOF
cat <<-EOF > ${USERDATA_PATH}/post.sfx
	# Users and groups
	adduser --system --group --gecos "MediaPlayer Daemon" --home /var/lib/mpd --no-create-home mpd
	adduser --system --group --gecos "UPnP Media Renderer Client" --home /var/lib/upmpdcli --no-create-home upmpdcli
	adduser --system --group --gecos "MiniDLNA server" --home /var/lib/minidlna --no-create-home minidlna
	echo "pi:moodeaudio" | chpasswd

	# File permissions
	#chown root:netdev /etc/dhcpcd.conf
	chown -R pi:pi /home/pi
	chown -R mpd:audio /var/lib/mpd
	chown -R mpd:audio /var/log/mpd
	chown mpd:audio /etc/mpd.conf
	chown mpd:audio /run/mpd
	chown minidlna:minidlna /var/cache/minidlna
	chown minidlna:minidlna /var/lib/minidlna

	# Start-up configuration
	touch /boot/ssh
	sed -i 's| quiet.*||;s|^|net.ifnames=0 |' /boot/cmdline.txt
	sed -i 's/raspberrypi/moode/' /etc/hostname
	sed -i 's/raspberrypi/moode/' /etc/hosts
	sed -i 's/allowed_users=console/allowed_users=anybody/' /etc/X11/Xwrapper.config
	[ -f /etc/init.d/resize2fs_once ] && rm /etc/init.d/resize2fs_once
	cp -p /usr/share/zoneinfo/America/Detroit /etc/localtime
	dphys-swapfile swapoff
	update-rc.d dphys-swapfile remove
	#rm /var/swap
	[ -d /var/www/html ] && rm -r /var/www/html
	[ -f /etc/update-motd.d/10-uname ] && rm /etc/update-motd.d/10-uname
	#rm /var/lib/dhcpcd5/*

	# Moode configuration
	sqlite3 /var/local/www/db/moode-sqlite3.db "CREATE TRIGGER ro_columns BEFORE UPDATE OF param, value, [action] ON cfg_hash FOR EACH ROW BEGIN SELECT RAISE(ABORT, 'read only'); END;"
	sqlite3 /var/local/www/db/moode-sqlite3.db "update cfg_system set value='Emerald' where param='accent_color'"
	sqlite3 /var/local/www/db/moode-sqlite3.db "update cfg_system set value='Default' where param='themename'"

	# AlsaEqual
	amixer -D alsaequal > /dev/null
	chmod 0755 /usr/local/bin/alsaequal.bin
	chown mpd:audio /usr/local/bin/alsaequal.bin
	[ -f /usr/share/alsa/alsa.conf.d/equal.conf ] && rm /usr/share/alsa/alsa.conf.d/equal.conf

	# MPD configuration
	#su - mpd -c "/usr/bin/mpd /etc/mpd.conf"
	#su - mpd -c "/usr/bin/mpc enable only 1"
	#su - mpd -c "/usr/bin/mpc update"
	#su - mpd -c "/usr/bin/mpd --kill /etc/mpd.conf"

	# Start-up services
	#systemctl daemon-reload
	systemctl set-default multi-user.target
	systemctl disable cron.service
	systemctl enable rpcbind
	systemctl disable shellinabox
	systemctl disable hostapd
	systemctl disable dnsmasq
	systemctl disable bluetooth.service
	systemctl disable hciuart.service
	systemctl disable bluealsa
	systemctl disable mpd.service
	systemctl disable mpd.socket
	systemctl disable rotenc.service
	systemctl disable squeezelite
	systemctl disable upmpdcli.service
	systemctl disable minidlna
	systemctl disable upmpdcli
	systemctl disable localui

	sed -i ' s|init=/root/moode.sfx||' /boot/cmdline.txt
	
	umount /boot
	mount -oremount,ro /dev/mmcblk0p2 /

	sleep 20
	echo b > /proc/sysrq-trigger
	exit 0
EOF

install_gcclibs
remove_devfiles
create_selfextracting_archive
mv ${DATA_PATH}/${PRJ_NAME}/${PLATFORM_NAME}/${PRJ_NAME}.sfx ${DATA_PATH}/${PRJ_NAME}/${PLATFORM_NAME}/moode.sfx