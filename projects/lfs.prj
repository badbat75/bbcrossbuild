## Enable shared libraries (default) but disable static ones
BUILD_LIBSHARED=1
BUILD_LIBSTATIC=0

## Enable LTO both for kernel and applications
LTOENABLE=thin
KERNEL_LTOENABLE=thin

TOOLCHAIN=gnu

build --no_save_status lfs/create-base-fs_1.0

setup_full_toolchain --with-python --with-gnu-install --with-main-gcc

#### Gcc libraries built on gcc cross building should be almost the same
# GCC_TARGETS="libraries" build lfs/gcc

build lfs/create-base-config_1.0
build raspberrypi/rpi-firmware_1
build firmwares/linux-firmware
build raspberrypi/rpi-kernel_$( echo ${KERNEL_VER} | cut -d'.' -f1,2 )
#build lfs/GLibc
build lfs/tzdata_2022c
build lfs/man-pages_5.13
build lfs/iana-etc_20220819
build lfs/zlib_1
build lfs/bzip2_1.0.8
build lfs/xz_5.2.5
build lfs/zstd_1.5.2
build lfs/file_5
build lfs/readline_8.2
build lfs/bc_1.0.7
build lfs/attr_2.4.48
build lfs/acl_2.2.53
build lfs/libcap_2.47
build lfs/shadow_4
build lfs/sed_4.8
build lfs/psmisc_23.5
build lfs/grep_3.6
build lfs/ncurses_6
build lfs/bash_5
build lfs/gdbm_1.23
build lfs/expat_2
build lfs/inetutils_2.3
build perl/XML::Parser_2.46
build lfs/perl_5
build lfs/intltool_0.51.0
build lfs/kmod_30
build lfs/elfutils_0
build lfs/libffi_3.3
build lfs/openssl_3
build lfs/coreutils_9.1
build lfs/diffutils_3.8
build lfs/gawk_5
build lfs/findutils_4.9.0
build lfs/groff_1.22.4
build lfs/less
build lfs/gzip_1.12
build lfs/iproute2_5.19.0
build lfs/kbd_2.5.1
build lfs/libpipeline_1.5.6
build lfs/man-db_2.10.2
build lfs/tar_1.34
build lfs/vim_9.0
build lfs/systemd
if [ ${ENABLE_DBUS:-1} -eq 1 ]
then
	build lfs/D-Bus
fi
build lfs/polkit
build lfs/procps-ng_4
build lfs/util-linux_2.38.1
build lfs/e2fsprogs_1.46
build lfs/btrfs-progs
build lfs/dosfstools_4.2
### Security
build lfs/sudo_1.9
build lfs/net-tools_2.10
build lfs/openssh_9.1p1
### Multimedia
build lfs/alsa-utils_1.2
### System Utilities
build raspberrypi/pi-bluetooth_0
build lfs/bluez_5
build lfs/usb-utils_014
build lfs/pciutils_3.8.0
build lfs/lsof_4.95
build lfs/wget_1.21.1
build lfs/which_2.21
### Network
build lfs/bind_9.19
build lfs/dhcp_4.4.3
#build lfs/dhcpcd
build firmwares/wireless-regdb
build lfs/wpa_supplicant_2
build lfs/hostapd_2
build lfs/iw_5.9
build lfs/wireless-tools_29
build lfs/curl_7
### Development
build lfs/strace

if [ ${ENABLE_DEV:-0} -eq 1 ]
then
	build lfs/binutils
	GCC_TARGETS="binaries" build lfs/gcc
	build lfs/gdb
	build lfs/make
	build lfs/bison
	build lfs/libtool
	build lfs/autoconf
	build lfs/automake
	build lfs/gettext
	build lfs/pkg-config
	build lfs/sccache
else
	LFS_REMOVE_DEVFILES="--remove_devfiles"
fi

### Final configurations ###
case x${PLATFORM_NAME} in
	xrpi|xrpi2|xrpi3) 	echo "arm_64bit=0" >${BIN_PATH}/boot/config.txt ;;
	xrpi3-aarch64) 		echo "arm_64bit=1" >${BIN_PATH}/boot/config.txt ;;
esac
echo "net.ifnames=0 console=tty1 root=/dev/mmcblk0p2 fsck.repair=yes rootwait" >${BIN_PATH}/boot/cmdline.txt

echo Configuring Host Name
echo ${LFS_HOSTNAME:-lfs} > ${BIN_PATH}/etc/hostname
echo "LANG=en_US.UTF-8" > ${BIN_PATH}/etc/locale.conf

if [ ! -x ${WLAN_SSID} ] && [ ! -x ${WLAN_PSK} ] && [ ! -x ${WLAN_DEV} ]
then
	echo Configuring WiFi
	wpa_passphrase ${WLAN_SSID} ${WLAN_PSK} > ${BIN_PATH}/etc/wpa_supplicant/wpa_supplicant-${WLAN_DEV}.conf
	systemctl --root=${BIN_PATH} enable wpa_supplicant@${WLAN_DEV}
	cat > ${BIN_PATH}/etc/systemd/network/${WLAN_DEV}.network <<-EOF
		[Match]
		Name=${WLAN_DEV}
		SSID=${WLAN_SSID}

		[Network]
		DHCP=yes
	EOF
	echo
fi
if [ "${ENABLE_SSH:-1}" = "1" ]
then
	echo Enabling SSHd
	ssh-keygen -A -f ${BIN_PATH}
	systemctl --root=${BIN_PATH} enable sshd
	generate_ssh_keys --install binaries
	systemctl --root=${BIN_PATH} disable regenerate_ssh_host_keys
	echo
fi

############################

function build_lfs_image () {
	set -e
	create_image lfs --rootfstype ext4 --size 3G
	mount_tag lfs --mountlist "2:/ 1:/boot"
	inject_into_mount_tag lfs binaries ${LFS_REMOVE_DEVFILES}
	run_postinstall_scripts lfs
	#run_on_root_dir lfs root "systemctl enable console-getty"
	#run_on_root_dir lfs root "systemctl get-default && systemctl set-default multi-user.target"
	#run_on_root_dir lfs root "systemctl enable systemd-networkd"
	#run_on_root_dir lfs root "systemctl enable systemd-resolved"
	#run_on_root_dir lfs root "systemctl enable systemd-timesyncd"
	run_on_root_dir lfs root "systemctl mask tmp.mount"
	run_on_root_dir lfs root "useradd -G wheel -m lfs"
	run_on_root_dir lfs root "echo root:changeme | chpasswd"
	run_on_root_dir lfs root "echo lfs:lfs | chpasswd"
	run_on_root_dir lfs root "pwconv"
	unmount_tag --finalize lfs
	set +e
}

build_lfs_image

#create_sfx_archive remove_devfiles
#zip_project remove_devfiles