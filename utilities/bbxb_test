#!/bin/bash

set -e
MYPATH=$(dirname $(realpath ${0}))
PLATFORMS="generic-x64,rpi,rpi3-aarch64"
DATA_PATH=${HOME}/.bbxb_test
TOOLCHAINS="gnu,llvm"

pushd ${MYPATH}/.. >/dev/null

echo
echo "This script will check if bbxb will work and if it is able to boostrap images from blank."
echo "Platforms to test: ${PLATFORMS}"
echo

cat <<-EOF >projects/test.prj
    ## Enable shared libraries (default) but disable static ones
    BUILD_LIBSHARED=1
    BUILD_LIBSTATIC=0

    ## Enable LTO both for kernel and applications
    LTOENABLE=thin
    KERNEL_LTOENABLE=thin
    GCC_LTOENABLE=0

    build --no_save_status lfs/create-base-fs_1.0

    setup_full_toolchain --with-python --with-gnu-install

    # Build bash to test chroot Environment
    build lfs/bash

    # Test QEMU Environment and generated libraries
    build lfs/lz4

    # Test cmake
    build lfs/zlib

    # Test autoconf/configure/meson/ninja
    build lfs/GLib
EOF

case ${1} in
    clean-start)
        [ -d ${DATA_PATH}/test ] && rm -rf ${DATA_PATH}/test || true
        ;;
    clean-platform)
        [ -d ${DATA_PATH}/test ] && eval rm -rf ${DATA_PATH}/test/{${PLATFORMS}} || true
        ;;
esac

IFS=,
for TOOLCHAIN in ${TOOLCHAINS}
do
    echo "### Testing ${TOOLCHAIN} toolchain... ###"
    for PLATFORM in ${PLATFORMS}
    do
        echo "# Running test for ${PLATFORM}..."
        DATA_PATH=${DATA_PATH} TOOLCHAIN=${TOOLCHAIN} ./bbxb test ${PLATFORM}
        echo "# Test ok!!!"
    done
    echo "### Toolchain test ok!!! ###"
    echo
done
unset IFS
rm -rf ${DATA_PATH} projects/test.prj
popd >/dev/null
set +e