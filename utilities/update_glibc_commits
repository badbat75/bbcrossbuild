 #!/bin/sh
function print_patch_extract {
    LINE=1
    echo -n "\\\t${GLIBC_REL})\n"
    echo -n "\\t\\tPATCHES=\\\""
    while read patch
    do
        if [ ${LINE} -gt 1 ]
        then
            echo -n " \\\\\n"
            echo -n "\\t\\t\\t"
        fi
        echo -n "https://sourceware.org/git?p=glibc.git;a=patch;h=${patch}"
        ((LINE=LINE+1))
    done < <(git -C /tmp/glibc log --reverse --pretty=format:"%H" glibc-${GLIBC_REL}..origin/release/${GLIBC_REL}/master)
    echo -n "\\\"\n"
    echo -n "\\t\\t;;"
}

BBXB_PATH=$(realpath "$(dirname ${0})/..")
echo "bbxbuild path: ${BBXB_PATH}"

GLIBC_REL=${1}

if [ -z ${GLIBC_REL} ]
then
    echo "No GNU LibC version has been specified"
    echo
    echo "Usage:"
    echo
    echo "$(basename ${0}) <glibc_ver>"
    echo
    exit 1
fi

if [ ! -d /tmp/glibc ]
then
    mkdir /tmp/glibc
    git -C /tmp/glibc init
    git -C /tmp/glibc remote add origin https://sourceware.org/git/glibc.git
fi
git -C /tmp/glibc fetch
git -C /tmp/glibc branch -m origin/release/${GLIBC_REL}/master

if [ -f ${BBXB_PATH}/packages/lfs/glibc.pkg.bak ]
then
    echo "Please remove or restore ${BBXB_PATH}/packages/lfs/glibc.pkg.bak before update"
else
    cp -v ${BBXB_PATH}/packages/lfs/glibc.pkg ${BBXB_PATH}/packages/lfs/glibc.pkg.bak
    eval "sed -i '/^\t${GLIBC_REL})/,/\t\t;;/c $(print_patch_extract)' ${BBXB_PATH}/packages/lfs/glibc.pkg"
fi