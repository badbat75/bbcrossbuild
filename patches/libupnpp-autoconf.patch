--- libupnpp-0.17.old/configure.ac	2019-02-27 17:53:23.260835200 +0100
+++ libupnpp-0.17/configure.ac	2019-02-27 17:54:42.817805000 +0100
@@ -43,6 +43,16 @@
 AM_CONDITIONAL([LINUX], [test "$build_linux" = "yes"])
 AM_CONDITIONAL([OSX], [test "$build_mac" = "yes"])
 
+# libtool automatically adds --rpath $libdir to each executable, and
+# there is apparently no standard way to disable this.  Also, you cannot
+# override rpath with LD_LIBRARY_PATH, so this causes problems if you have
+# and old version of nss/nspr installed in the system $libdir, but you
+# want to use a different one.  So we're disabling this rpath thing by
+# default and adding a --enable-rpath flag if you really, really want
+# to do this.
+AC_MSG_CHECKING(for --enable-rpath)
+AC_ARG_ENABLE(rpath, AS_HELP_STRING([--enable-rpath], [Allow libtool to add an rpath to $libdir (default: no)]))
+
 AM_INIT_AUTOMAKE([1.10 no-define subdir-objects foreign])
 AC_DISABLE_STATIC
 LT_INIT
@@ -102,3 +112,14 @@
 AC_CONFIG_FILES([Makefile])
 AC_CONFIG_FILES([libupnpp.pc])
 AC_OUTPUT
+
+if test "$enable_rpath" != "yes" ; then
+   AC_MSG_NOTICE([Fixing Makefile to remove automatic rpath to $libdir . . .])
+   cp -p Makefile Makefile.orig
+   cp -p Makefile Makefile.tmp
+   sed -e 's/-rpath \$(libdir) //g' \
+       Makefile > Makefile.tmp
+   cp -p Makefile.tmp Makefile
+   rm -f Makefile.tmp
+fi
+
