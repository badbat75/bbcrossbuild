# shadow
PKG_VER=4.15.1
PKG_URL="https://github.com/shadow-maint/shadow/archive/refs/tags/${PKG_VER}.tar.gz"
PKG_DEPS="lfs/bison:native lfs/Linux-PAM"
### Optional packages
PKG_DEPS+=" lfs/cracklib"
###
BUILD_PROCESS=configmake
PKG_AUTOCONF=1
CONF_FLAGS="--without-libbsd --with-{b,yes}crypt"
PKG_MAKEVARS="exec_prefix=${INSTALL_EXECPREFIX}"
PKG_MAKETARGETS="all,install-strip"

PKG_PREBUILD="sed -i '/AM_GNU_GETTEXT_VERSION/ s/0.19/0.20/g' configure.ac"
#	sed -i 's/groups\\\$(EXEEXT) //' src/Makefile.in
#	find man -name Makefile.in -exec sed -i 's/groups\.1 / /'   {} \;
#	find man -name Makefile.in -exec sed -i 's/getspnam\.3 / /' {} \;
#	find man -name Makefile.in -exec sed -i 's/passwd\.5 / /'   {} \;"
PKG_POSTBUILD="install -v -m640 /dev/null \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/shadow
	sed -e 's@#ENCRYPT_METHOD DES@ENCRYPT_METHOD YESCRYPT@' \
		-e 's@/var/spool/mail@/var/mail@'                 \
		-e '/PATH=/{s@/sbin:@@;s@/bin:@@}'                \
		-i \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/login.defs
	mkdir -pv \${PKG_PKGPATH}/var/mail
	install -v -m644 \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/login.defs \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/login.defs.orig &&
	for FUNCTION in FAIL_DELAY               \
					FAILLOG_ENAB             \
					LASTLOG_ENAB             \
					MAIL_CHECK_ENAB          \
					OBSCURE_CHECKS_ENAB      \
					PORTTIME_CHECKS_ENAB     \
					QUOTAS_ENAB              \
					CONSOLE MOTD_FILE        \
					FTMP_FILE NOLOGINS_FILE  \
					ENV_HZ PASS_MIN_LEN      \
					SU_WHEEL_ONLY            \
					CRACKLIB_DICTPATH        \
					PASS_CHANGE_TRIES        \
					PASS_ALWAYS_WARN         \
					CHFN_AUTH ENCRYPT_METHOD \
					ENVIRON_FILE
	do
		sed -i \"s/^\${FUNCTION}/# &/\" \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/login.defs
	done
	cat > \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/login <<-EOF
		# Begin /etc/pam.d/login

		# Set failure delay before next prompt to 3 seconds
		auth      optional    pam_faildelay.so  delay=3000000

		# Check to make sure that the user is allowed to login
		auth      requisite   pam_nologin.so

		# Check to make sure that root is allowed to login
		# Disabled by default. You will need to create /etc/securetty
		# file for this module to function. See man 5 securetty.
		#auth      required    pam_securetty.so

		# Additional group memberships - disabled by default
		#auth      optional    pam_group.so

		# include system auth settings
		auth      include     system-auth

		# check access for the user
		account   required    pam_access.so

		# include system account settings
		account   include     system-account

		# Set default environment variables for the user
		session   required    pam_env.so

		# Set resource limits for the user
		session   required    pam_limits.so

		# Display date of last login - Disabled by default
		#session   optional    pam_lastlog.so

		# Display the message of the day - Disabled by default
		#session   optional    pam_motd.so

		# Check user's mail - Disabled by default
		#session   optional    pam_mail.so      standard quiet

		# include system session and password settings
		session   include     system-session
		password  include     system-password

		# End /etc/pam.d/login
	EOF
	
	cat > \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/passwd <<-EOF
		# Begin /etc/pam.d/passwd

		password  include     system-password

		# End /etc/pam.d/passwd
	EOF
	
	cat > \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/su <<-EOF
		# Begin /etc/pam.d/su

		# always allow root
		auth      sufficient  pam_rootok.so

		# Allow users in the wheel group to execute su without a password
		# disabled by default
		#auth      sufficient  pam_wheel.so trust use_uid

		# include system auth settings
		auth      include     system-auth

		# limit su to users in the wheel group
		# disabled by default
		#auth      required    pam_wheel.so use_uid

		# include system account settings
		account   include     system-account

		# Set default environment variables for the service user
		session   required    pam_env.so

		# include system session settings
		session   include     system-session

		# End /etc/pam.d/su
	EOF

	cat > \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/chpasswd <<-EOF
		# Begin /etc/pam.d/chpasswd

		# always allow root
		auth      sufficient  pam_rootok.so

		# include system auth and account settings
		auth      include     system-auth
		account   include     system-account
		password  include     system-password

		# End /etc/pam.d/chpasswd
	EOF
	sed -e s/chpasswd/newusers/ \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/chpasswd >\${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/newusers

	cat > \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/chage <<-EOF
		# Begin /etc/pam.d/chage

		# always allow root
		auth      sufficient  pam_rootok.so

		# include system auth and account settings
		auth      include     system-auth
		account   include     system-account

		# End /etc/pam.d/chage
	EOF
	for PROGRAM in chfn chgpasswd chsh groupadd groupdel \
               groupmems groupmod useradd userdel usermod
	do
		install -v -m644 \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/chage \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/\${PROGRAM}
		sed -i \"s/chage/\$PROGRAM/\" \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/pam.d/\${PROGRAM}
	done"

if [ ${LFS_SPLITUSR} -eq 1 ]
then
	PKG_POSTBUILD+=";install -vdm755 \${PKG_PKGPATH}/sbin
		ln -s ../usr/sbin/nologin \${PKG_PKGPATH}/sbin
		install -vdm755 \${PKG_PKGPATH}${INSTALL_SYSCONFDIR}/default"
fi

PKG_POSTINSTALL="/usr/sbin/pwconv
/usr/sbin/grpconv
/usr/sbin/useradd -D --gid 999
sed -i '/MAIL/s/yes/no/' ${INSTALL_SYSCONFDIR}/default/useradd"
PKG_POSTINSTALL_PRIO=05