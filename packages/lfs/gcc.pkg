# binutils
PKG_SUFFIX=_${GCC_VER}
PKG_URL="https://github.com/gcc-mirror/gcc/archive/releases/gcc-${GCC_VER}.tar.gz"
PKG_DEPS="lfs/gmp lfs/mpfr lfs/mpc lfs/isl lfs/zlib_1.2.12"
BUILD_PROCESS=configmake
AUTOCONF_PATH=autoscan
CONF_ENV="env -u CPP -u CPPFLAGS"
CONF_FLAGS="--target=${HARCH} --with-sysroot=/ --with-build-sysroot=${SYSROOT} \
    --with-mpc-include=${SYSROOT}${BUILD_INCLUDEDIR} --with-mpc-lib=${SYSROOT}${BUILD_LIBDIR}${BUILD_LIBSUFFIX} \
    --with-mpfr-include=${SYSROOT}${BUILD_INCLUDEDIR} --with-mpfr-lib=${SYSROOT}${BUILD_LIBDIR}${BUILD_LIBSUFFIX} \
    --with-isl-include=${SYSROOT}${BUILD_INCLUDEDIR} --with-isl-lib=${SYSROOT}${BUILD_LIBDIR}${BUILD_LIBSUFFIX} \
    --enable-targets=${HARCH} --with-arch-directory=${HM} --with-arch=${HMARCH}  \
    --with-gmp-include=${SYSROOT}${BUILD_INCLUDEDIR} --with-gmp-lib=${SYSROOT}${BUILD_LIBDIR}${BUILD_LIBSUFFIX} \
    --enable-checking=release --enable-multiarch --disable-multilib --enable-version-specific-runtime-libs \
    --enable-gnu-indirect-function --enable-initfini-array --enable-gnu-unique-object --with-system-zlib --with-glibc-version=2.11 \
    --with-gcc-major-version-only --enable-linker-build-id --enable-lto --enable-threads=posix --enable-languages=${GCC_LANGUAGES:-c,c++} \
    --enable-clocale=gnu --enable-nls --enable-__cxa_atexit --with-default-libstdcxx-abi=new \
    --enable-gcov --enable-libmudflap --enable-libgomp --enable-libssp --enable-libsanitizer --enable-install-libiberty \
    --disable-libitm --disable-libmpx"
if [ "${LTOENABLE:-0}" != "0" ]
then
    # CONF_FLAGS+" --enable-symvers=no"
    PKG_PREBUILD="sed '/^  __asm/d;/^# define omp_lock_symver(fn) /a\  extern __typeof (g##fn##_30) _##fn##_30 __attribute__((__symver__ (#fn \"@@OMP_3.0\"))); \\\\\\n  extern __typeof (g##fn##_25) _##fn##_25 __attribute__((__symver__ (#fn \"@OMP_1.0\")));' -i libgomp/libgomp.h;"
fi
INST_CMD="install-strip"
PKG_MAKEENV="env -u CPP -u CPPFLAGS"
PKG_MAKEVARS="STAGE_CC_WRAPPER=\"${CCWRAPPER}\" \
    CFLAGS_FOR_TARGET=\"\${CFLAGS}\" \
    CXXFLAGS_FOR_TARGET=\"\${CXXFLAGS}\" \
    AR_FOR_TARGET=\"\${AR}\" \
	NM_FOR_TARGET=\"\${NM}\" \
	RANLIB_FOR_TARGET=\"\${RANLIB}\" \
"
PKG_TOOLCHAIN=gnu

PKG_CXXFLAGS="-Wno-stringop-overflow -Wno-maybe-uninitialized"

case ${GCC_VER} in
#    12.2.0)  PKG_AUTOCONF=2.69
#    ;;
    *)
        PKG_AUTOCONF=2.69
        PKG_AUTOMAKE=1.15.1
        PKG_LIBTOOL=2.2.6a
        PKG_GETTEXT=0.14.5
        #CONF_FLAGS+=" --disable-dependency-tracking"
    ;;
esac

PKG_PREBUILD+="sed '/^AC_INIT/a AC_CONFIG_MACRO_DIR([../config])' \
    -i gcc/configure.ac libgcc/configure.ac libobjc/configure.ac libiberty/configure.ac -i Makefile.in
    sed '/all-build-libcpp/,/TARGET-build-libcpp/ s/\\\$(BASE_FLAGS_TO_PASS) //' -i Makefile.in
"

PKG_POSTBUILD="find ${PKG_PKGPATH}}${BUILD_PREFIX}/lib/gcc/${HARCH} -type f,l \\( -name "*.so*" -a ! -name "*.so*.py" -o -name "*.a*" -o -name "*.la*" -o -name "crt*.o" \\) \
    | xargs -r -I{} bash -c ln -fsv \$(realpath --relative-to=${PKG_PKGPATH}${BUILD_LIBDIR}${BUILD_LIBSUFFIX} {}) ${PKG_PKGPATH}${BUILD_LIBDIR}${BUILD_LIBSUFFIX}/\$(basename {})'"

##################### Package dedicated code #########################
case "${GCC_TARGETS:-all}" in
    all)
        local OBJECTS="host target"
    ;;
    target-libraries)
        local OBJECTS="target-libgcc target-libstdc++-v3 target-libgomp target-libssp target-libatomic"
        if [ "$(echo ${GCC_LANGUAGES} | grep -o fortran)" == "fortran" ]
        then
            OBJECTS+=" target-libquadmath"
        fi
    ;;
    *) 
        local OBJECTS="${GCC_TARGETS}"
    ;;
esac
PKG_MAKETARGETS=
for object in $( echo ${OBJECTS} | tr ',' ' ' )
do
    PKG_MAKETARGETS+=" all-${object}"
    INST_CMD="install-strip-${object}"
done
######################################################################