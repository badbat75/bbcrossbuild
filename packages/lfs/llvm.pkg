# llvm
PKG_VER=${LLVM_VER}
PKG_URL="https://github.com/llvm/llvm-project/releases/download/llvmorg-${PKG_VER}/llvm-${PKG_VER}.src.tar.xz"
PKG_DEPS="lfs/ncurses lfs/zlib lfs/xz lfs/libxml2 lfs/binutils lfs/libffi"
BUILD_PROCESS=cmakebuild
CONF_FLAGS="-DLLVM_ENABLE_FFI:BOOL=ON"
case ${PKG_OVERRIDELTO:-${LTOENABLE:-0}} in
	1|fat) CONF_FLAGS+=" LLVM_ENABLE_LTO=fat"
		;;
	2|thin)	CONF_FLAGS+=" LLVM_ENABLE_LTO=thin"
		;;
esac
CONF_FLAGS+=" -DLLVM_BUILD_LLVM_DYLIB:BOOL=ON"
CONF_FLAGS+=" -DLLVM_LINK_LLVM_DYLIB:BOOL=ON"
CONF_FLAGS+=" -DLLVM_ENABLE_RTTI:BOOL=ON "
CONF_FLAGS+=" -DLLVM_TARGETS_TO_BUILD:STRING=\"$(
		case "${HM}" in
			aarch64) echo -n AArch64 ;;
			arm) echo -n Arm ;;
			mips) echo -n Mips ;;
			powerpc) echo -n PowerPC ;;
			riscv) echo -n RISCV ;;
			sparc) echo -n Sparc ;;
			x86_64) echo -n X86 ;;
		esac
	);AMDGPU;BPF\""
CONF_FLAGS+=" -DLLVM_BINUTILS_INCDIR:FILEPATH=\"\${SYSROOT}/usr/include\""
CONF_FLAGS+=" -DLLVM_TABLEGEN:FILEPATH=${GLOBAL_TOOLCHAIN_PATH}/llvm-${LLVM_VER}/bin/llvm-tblgen"
CONF_FLAGS+=" -DLLVM_LIBDIR_SUFFIX:STRING=${INSTALL_LIBSUFFIX}"
CONF_FLAGS+=" -DLLVM_USE_HOST_TOOLS:BOOL=ON"
CONF_FLAGS+=" -DLLVM_INCLUDE_BENCHMARKS:BOOL=OFF"
CONF_FLAGS+=" -DLLVM_INCLUDE_TESTS:BOOL=OFF"
CONF_FLAGS+=" -DLLVM_ENABLE_BINDINGS:BOOL=OFF"

CONF_FLAGS+=" -Wno-dev"
#CONF_FLAGS+=" -DCLANG_DEFAULT_PIE_ON_LINUX=ON"
PKG_MAKETARGETS="install/strip"
PKG_OVERRIDESHARED=0
PKG_PREBUILD="download_uncompress https://github.com/llvm/llvm-project/releases/download/llvmorg-${PKG_VER}/cmake-${PKG_VER}.src.tar.xz \${PKG_SRCPATH}/cmake-${PKG_VER}.src
	sed '/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-${PKG_VER}.src@' -i CMakeLists.txt"