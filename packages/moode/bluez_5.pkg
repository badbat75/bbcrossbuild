# bluez_5
PKG_SUFFIX=.63
PKG_URL="http://www.kernel.org/pub/linux/bluetooth/bluez-5${PKG_SUFFIX}.tar.xz"
PKG_DEPS="raspbian/ell_0.48-0.1"
#PKG_DEPS+=" lfs/elfutils_0.182"
BUILD_PROCESS=configmake
CONF_FLAGS="--with-dbusconfdir=${BUILD_SYSCONFDIR} \
	--with-dbussystembusdir=${BUILD_PREFIX}/share/dbus-1/system-services \
	--with-dbussessionbusdir=${BUILD_PREFIX}/share/dbus-1/services \
	--with-udevdir=${BUILD_LIBDIR}/udev \
	--enable-library --enable-deprecated --enable-tools --enable-threads --enable-backtrace --enable-nfc --enable-sap --enable-monitor --enable-udev --enable-obex --enable-client --enable-systemd --enable-sixaxis --enable-health --enable-hid2hci --enable-experimental --enable-external-ell"
INST_CMD="install-strip"
#PATCHDEB=""
# Moode directory location search for bluetoothd and obexd

PKG_PREBUILD="patch -p1 <<EOF
index a6dcc76de..3ee98431d 100644
--- a/src/adapter.c
+++ b/src/adapter.c
@@ -8214,11 +8214,15 @@ static void store_link_key(struct btd_adapter *adapter,
 
 	snprintf(filename, PATH_MAX, STORAGEDIR \"/%s/%s/info\",
 			btd_adapter_get_storage_dir(adapter), device_addr);
+	create_file(filename, 0600);
+
 	key_file = g_key_file_new();
 	if (!g_key_file_load_from_file(key_file, filename, 0, &gerr)) {
 		error(\"Unable to load key file from %s: (%s)\", filename,
 								gerr->message);
 		g_error_free(gerr);
+		g_key_file_free(key_file);
+		return;
 	}
 
 	for (i = 0; i < 16; i++)
@@ -8229,8 +8233,6 @@ static void store_link_key(struct btd_adapter *adapter,
 	g_key_file_set_integer(key_file, \"LinkKey\", \"Type\", type);
 	g_key_file_set_integer(key_file, \"LinkKey\", \"PINLength\", pin_length);
 
-	create_file(filename, 0600);
-
 	str = g_key_file_to_data(key_file, &length, NULL);
 	if (!g_file_set_contents(filename, str, length, &gerr)) {
 		error(\"Unable set contents for %s: (%s)\", filename,
-- 
index 3d97dc835..1d2e1f732 100644
--- a/lib/uuid.c
+++ b/lib/uuid.c
@@ -251,6 +251,9 @@ static int bt_string_to_uuid128(bt_uuid_t *uuid, const char *string)
 
 int bt_string_to_uuid(bt_uuid_t *uuid, const char *string)
 {
+	if (!string)
+		return -EINVAL;
+
 	if (is_base_uuid128(string))
 		return bt_string_to_uuid16(uuid, string + 4);
 	else if (is_uuid128(string))
-- 
EOF
patch -p1 <<EOF
diff --git a/src/bluetooth.conf b/src/bluetooth.conf
index 8a1e25801..d6e1c7a03 100644
--- a/src/bluetooth.conf
+++ b/src/bluetooth.conf
@@ -22,6 +22,11 @@
     <allow send_interface=\"org.mpris.MediaPlayer2.Player\"/>
   </policy>
 
+  <!-- allow users of bluetooth group to communicate -->
+  <policy group=\"bluetooth\">
+    <allow send_destination=\"org.bluez\"/>
+  </policy>
+
   <policy context=\"default\">
     <allow send_destination=\"org.bluez\"/>
   </policy>
--
diff --git a/src/main.conf b/src/main.conf
index f47cab46d..e791caaf7 100644
--- a/src/main.conf
+++ b/src/main.conf
@@ -235,7 +235,7 @@
 # AutoEnable defines option to enable all controllers when they are found.
 # This includes adapters present on start as well as adapters that are plugged
 # in later on. Defaults to 'false'.
-#AutoEnable=false
+AutoEnable=true
 
 # Audio devices that were disconnected due to suspend will be reconnected on
 # resume. ResumeDelay determines the delay between when the controller
--
EOF
"

PKG_POSTBUILD="mkdir -p ${PKG_PKGPATH}/bin
mv ${PKG_PKGPATH}/usr/bin/hciconfig ${PKG_PKGPATH}/bin
mkdir -p ${PKG_PKGPATH}/etc/bluetooth/
cp -pv \${PKG_SRCPATH}/{src/main.conf,profiles/input/input.conf,profiles/network/network.conf} ${PKG_PKGPATH}/etc/bluetooth/"
PKG_CONFIG_SYSROOT_DIR=${DISTOS_PATH}

PKG_POSTINSTALL="# create bluetooth group if not already present
if ! getent group bluetooth > /dev/null; then
	addgroup --quiet --system bluetooth
fi"