PKG_SUFFIX=.0.4931.0
PKG_DEPS="raspios/ffmpeg_4.4"
PKG_URL="http://commondatastorage.googleapis.com/chromium-browser-official/chromium-101${PKG_SUFFIX}-lite.tar.xz"
BUILD_PROCESS=downloadonly
PKG_COPYSRC=1

PKG_CXXFLAGS="-Wno-conversion \
				 -Wno-unused-function \
				 -Wno-unused-variable \
				 -Wno-unused-private-field \
				 -Wno-deprecated-declarations \
				 -Wno-unknown-pragmas"

PKG_PREBUILD="cat <<EOF | patch -p1
--- a/build/config/linux/pkg-config.py        2022-01-07 01:41:05.000000000 +0100
+++ b/build/config/linux/pkg-config.py    2022-01-12 10:42:19.527924835 +0100
@@ -59,8 +59,11 @@
     print(\"You must specify an architecture via -a if using a sysroot.\")
     sys.exit(1)

-  libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
-  libdir += ':' + sysroot + '/usr/share/pkgconfig'
+  if \"PKG_CONFIG_LIBDIR\" in os.environ:
+    libdir = os.environ['PKG_CONFIG_LIBDIR']
+  else:
+    libdir = sysroot + '/usr/' + options.system_libdir + '/pkgconfig'
+    libdir += ':' + sysroot + '/usr/share/pkgconfig'
   os.environ['PKG_CONFIG_LIBDIR'] = libdir
   return libdir

--- a/remoting/host/BUILD.gn  2022-01-07 01:41:25.000000000 +0100
+++ b/remoting/host/BUILD.gn      2022-01-12 12:02:13.167909893 +0100
@@ -25,7 +25,7 @@
     deps += [ \":remoting_host_branded\" ]
   }

-  if (!is_chromeos_ash && !is_chromeos_lacros && !is_android && !is_ios) {
+  if (false) {
     deps += [
       \"//remoting/host:remoting_native_messaging_host\",
       \"//remoting/host:remoting_native_messaging_manifests\",
--- a/build/config/linux/pkg_config.gni    2022-01-12 14:58:38.347876898 +0100
+++ b/build/config/linux/pkg_config.gni   2022-01-12 14:59:10.237876799 +0100
@@ -104,7 +104,7 @@
     cflags = pkgresult[1]

     foreach(include, pkgresult[0]) {
-      if (use_sysroot) {
+      if (false) {
         # We want the system include paths to use -isystem instead of -I to
         # suppress warnings in those headers.
         include_relativized = rebase_path(include, root_build_dir)
--- a/third_party/skia/src/pdf/SkPDFSubsetFont.cpp
+++ b/third_party/skia/src/pdf/SkPDFSubsetFont.cpp
@@ -7,6 +7,9 @@
 #include \"SkLoadICU.h\"
 #endif
 
+#undef SK_PDF_USE_SFNTLY
+#undef SK_PDF_USE_HARFBUZZ_SUBSET
+
 #if defined(SK_PDF_USE_HARFBUZZ_SUBSET)
 
 #include \"include/private/SkTemplates.h\"
--- a/third_party/harfbuzz-ng/BUILD.gn
+++ b/third_party/harfbuzz-ng/BUILD.gn
@@ -19,7 +19,6 @@ if (use_system_harfbuzz) {
     ]
     packages = [
       \"harfbuzz\",
-      \"harfbuzz-subset\",
     ]
   }
 } else {
--- a/components/paint_preview/common/subset_font.cc
+++ b/components/paint_preview/common/subset_font.cc
@@ -6,7 +6,6 @@
 
 // clang-format off
 #include <hb.h>
-#include <hb-subset.h>
 // clang-format on
 
 #include <memory>
--- a/components/paint_preview/common/serial_utils.cc
+++ b/components/paint_preview/common/serial_utils.cc
@@ -85,12 +85,10 @@
   }
 #endif

-  auto subset_data = SubsetFont(typeface, *usage_it->second);
-  if (!subset_data) {
+  if (!true) {
     return typeface->serialize(
         SkTypeface::SerializeBehavior::kIncludeDataIfLocal);
   }
-  return subset_data;
 }

 sk_sp<SkData> SerializeImage(SkImage* image, void* ctx) {
--- a/components/paint_preview/common/BUILD.gn
+++ b/components/paint_preview/common/BUILD.gn
@@ -26,8 +26,6 @@ source_set(\"common\") {
     \"serial_utils.h\",
     \"serialized_recording.cc\",
     \"serialized_recording.h\",
-    \"subset_font.cc\",
-    \"subset_font.h\",
     \"version.cc\",
     \"version.h\",
   ]
--- a/third_party/skia/BUILD.gn
+++ b/third_party/skia/BUILD.gn
@@ -989,7 +989,6 @@ optional(\"pdf\") {
   sources_when_disabled = [ \"src/pdf/SkDocument_PDF_None.cpp\" ]
   if (skia_use_icu && skia_use_harfbuzz && skia_pdf_subset_harfbuzz) {
     deps += [ \"//third_party/harfbuzz\" ]
-    defines = [ \"SK_PDF_USE_HARFBUZZ_SUBSET\" ]
   } else if (skia_use_icu && skia_use_sfntly) {
     deps += [ \"//third_party/sfntly\" ]
     defines = [ \"SK_PDF_USE_SFNTLY\" ]
--- a/third_party/harfbuzz-ng/utils/hb_scoped.h
+++ b/third_party/harfbuzz-ng/utils/hb_scoped.h
@@ -7,7 +7,6 @@
 
 // clang-format off
 #include <hb.h>
-#include <hb-subset.h>
 // clang-format on
 
 #include <memory>
@@ -53,7 +52,6 @@ using HbScoped = std::unique_ptr<T, HbSp
   F(hb_face_t, hb_face_destroy)            \\\\
   F(hb_font_t, hb_font_destroy)            \\\\
   F(hb_set_t, hb_set_destroy)              \\\\
-  F(hb_subset_input_t, hb_subset_input_destroy)
 
 HB_TYPE_DESTRUCTOR_PAIRS_REPEAT(SPECIALIZED_DELETER_FOR_HARFBUZZ_TYPE)
 
EOF
"

PKG_POSTBUILD="cat > gen_build.sh <<-EOF
	#!/bin/bash
	set -ex

	defines=\"clang_use_chrome_plugins=false\"
	defines+=\" host_toolchain=\\\"//build/toolchain/linux/unbundle:default\\\"\"
	defines+=\" custom_toolchain=\\\"//build/toolchain/linux/unbundle:default\\\"\"
	defines+=\" host_cpu=\\\"${HM}\\\" \"
	defines+=\" symbol_level=0 \"
	defines+=\" blink_symbol_level=0\"
	defines+=\" v8_symbol_level=0\"
	defines+=\" use_sysroot=true sysroot=\\\"${DISTOS_PATH}\\\"\"
	defines+=\" use_thin_lto=true\"
	defines+=\" thin_lto_enable_optimizations=true\"
	defines+=\" use_lto_in_rustc_linking=true\"
	#defines+=\" concurrent_links=1\"
	defines+=\" enable_stripping=true\"
	defines+=\" is_debug=false\"
	defines+=\" treat_warnings_as_errors=false\"
	defines+=\" fatal_linker_warnings=false\"

	defines+=\" use_goma=false\"
	defines+=\" use_vaapi=false\"
	#defines+=\" use_allocator=\\\"none\\\"\"
	defines+=\" use_libjpeg_turbo=true\"
	defines+=\" use_custom_libcxx=false\"
	defines+=\" use_gnome_keyring=false\"
	defines+=\" use_unofficial_version_number=false\"
	defines+=\" enable_vr=false\"
	defines+=\" enable_nacl=false\"
	#defines+=\" enable_reading_list=false\"
	#defines+=\" enable_iterator_debugging=false\"
	defines+=\" enable_hangout_services_extension=false\"
	defines+=\" enable_js_type_check=false\"

	defines+=\" optimize_webui=true\"
	defines+=\" use_gio=true\"
	defines+=\" use_ozone=true\"
	defines+=\" use_pulseaudio=true\"
	defines+=\" link_pulseaudio=true\"
	defines+=\" enable_widevine=true\"
	defines+=\" v8_enable_backtrace=true\"
	defines+=\" use_system_zlib=true\"
	defines+=\" use_system_lcms2=true\"
	defines+=\" use_system_libpng=true\"
	defines+=\" use_system_libjpeg=true\"
	defines+=\" use_system_freetype=true\"
	defines+=\" use_system_harfbuzz=true\"
	defines+=\" use_system_libopenjpeg2=true\"
	defines+=\" enable_swiftshader=true\"
	defines+=\" enable_one_click_signin=true\"
	defines+=\" proprietary_codecs=true\"
	defines+=\" ffmpeg_branding=\\\"Chrome\\\"\"

	./out/Release/gn gen out/Release --args=\"\\\${defines}\"
	set +ex
	EOF
	chmod +x gen_build.sh

	CC= CXX=\"${CCWRAPPER:+${CCWRAPPER} }clang++\" CFLAGS= CXXFLAGS=\"-O3 -march=native\" LDFLAGS=\"-fuse-ld=lld\" \
		python3 tools/gn/bootstrap/bootstrap.py --skip-generate-buildfiles
	./gen_build.sh"

	#### python3 /home/desimonie/.bbxb/raspios/rpi3/builds/chromium_97.0.4692.77/build/config/linux/pkg-config.py -s /home/desimonie/.bbxb/raspios/rpi3/distos -a arm libdrm --system_libdir=lib/arm-linux-gnueabihf
	#### missing --system_libdir during pkg-config